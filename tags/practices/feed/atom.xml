<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Loïc Chardonnet&#039;s blog</title>
    <subtitle>Talks about Symfony2, git and other developer stuff</subtitle>
    <link href="http://gnugat.github.io/feed/index.atom" rel="self" />
    <link href="http://gnugat.github.io/" />
        <id>http://gnugat.github.io/</id>
            <updated>2014-01-08T00:00:00+01:00</updated>
            <entry>
        <title>Carew, the static site generator</title>
                <id>http://gnugat.github.io/2014/01/01/carew-static-site-generator.html</id>
                <updated>2014-01-01T00:00:00+01:00</updated>
        <author>
            <name>Loïc Chardonnet</name>
            <email>loic.chardonnet@gmail.com</email>
        </author>
        <link rel="alternate" type="text/html" href="http://gnugat.github.io/2014/01/01/carew-static-site-generator.html"/>
        <content type="html" xml:lang="en"><![CDATA[<p>Frameworks are a real help when building web applications which serve business
logic. But what about static websites?</p>
<p>Those only contain pages which could be directly written in HTML. The only
problem with this approach is that HTML isn't writter friendly compared to
Markdown.</p>
<p>Also, we could say that static websites like blogs do have some logic behind the
scenes:</p>
<ul><li>posts can have a state (is it published yet?)</li>
<li>posts can be tagged, in order to make them easier to find</li>
</ul><p>But still, a framework might be too much for this task.</p>
<p>Static site generators are a way to solve this problem:</p>
<ol><li>simply write your pages in markdown</li>
<li>launch a command to generate HTML from it</li>
</ol><p><a href="http://carew.github.io/">Carew</a> is one of them (among
  <a href="http://jekyllrb.com/">Jekyll</a>,
  <a href="http://hyde.github.io/">Hyde</a>,
  <a href="https://github.com/obensonne/poole">Poole</a>
  and <a href="https://github.com/spjwebster/lanyon">Lanyon</a>):
it is written in PHP, allows you to use the template engine
<a href="http://twig.sensiolabs.org/">Twig</a> in your markdown and it provides a theme
using <a href="http://getbootstrap.com/2.3.2/">Bootstrap</a>.</p>
<p>This blog post will focus on Carew, as
<a href="https://github.com/gnugat/gnugat.github.io">this very blog is written with it</a>.</p>
<h2 id="carew-and-github">Carew and Github<a href="#carew-and-github" class="anchor">#</a></h2>
<p>A common way to quickly publish static sites is to use
<a href="http://pages.github.com/">Github Pages</a> which works as follow:</p>
<ol><li>create a repository, the name should follow this format: <code>&lt;username&gt;.github.io</code></li>
<li>add, commit and push the content of the <code>web</code> directory directly at the
root of your repo</li>
<li>the site is now available at this address: <code>http://&lt;username&gt;.github.io</code></li>
</ol><p><a href="http://carew.github.io/cookbook/hosting.html">Learn more about hosting a website built with Carew on the official website</a>.</p>
<h2 id="creation">Creation<a href="#creation" class="anchor">#</a></h2>
<p>Creating your site using Carew is very simple, just follow these steps:</p>
<pre><code>$ php composer.phar create-project carew/boilerplate &lt;project&gt; -s dev
$ cd &lt;project&gt;
$ bin/carew build</code></pre>
<p>Examples pages (which sources are located in <code>pages</code> and <code>posts</code>) are converted
from markdown to HTML in the <code>web</code> directory.</p>
<h2 id="customization">Customization<a href="#customization" class="anchor">#</a></h2>
<p>Before writing any page or post, edit the configuration wich is located inside
the <code>config.yml</code> file.</p>
<p>Then edit the <code>pages/index.md</code> and <code>pages/about.md</code> pages with your own content.</p>
<p>Finally, remove the content of the <code>posts</code> folder and create your first blog
post using this command:</p>
<pre><code>$ bin/carew generate:post [--date='YYYY-MM-DD'] title</code></pre>
<p><a href="http://carew.github.io/cookbook/configuration.html">See the configuration documentation on the official website</a>.</p>
<h2 id="front-matters">Front matters<a href="#front-matters" class="anchor">#</a></h2>
<p>Each markdown file starts with a header:</p>
<pre><code>---
layout: post # no need for this line when writing a regular page
title: Will be used by `&lt;title&gt;&lt;/title&gt;` and `&lt;h1&gt;&lt;/h1&gt;`
tags:
    - first tag
    - carew
---</code></pre>
<p>Carew generates a page listing all existing tags. You can create a link to this
page with the following snippet:</p>
<pre><code>{{ link('tags', 'The page with all the tags') }}.</code></pre>
<p><a href="http://carew.github.io/documentation.html#front-matter">Learn more about Front matters on the official website</a>.</p>
<h2 id="conclusion">Conclusion<a href="#conclusion" class="anchor">#</a></h2>
<p>Carew is really simple to use, in this article we've covered the minimum you
should know to create pages, blog posts and tags.</p>
<p>I hope you enjoyed this article and that it helped you a little.</p>
<p>If you want to learn more, for example to customize its behaviour or its theme,
please refer to <a href="http://carew.github.io/documentation.html">the official documentation</a>.</p>]]></content>
    </entry>
        <entry>
        <title>Technology scouting</title>
                <id>http://gnugat.github.io/2014/01/08/technology-scouting.html</id>
                <updated>2014-01-08T00:00:00+01:00</updated>
        <author>
            <name>Loïc Chardonnet</name>
            <email>loic.chardonnet@gmail.com</email>
        </author>
        <link rel="alternate" type="text/html" href="http://gnugat.github.io/2014/01/08/technology-scouting.html"/>
        <content type="html" xml:lang="en"><![CDATA[<p>As a curious person I'm constantly trying to learn new practices and to discover
tools which might help me, by collecting information via technology scouting and
then reading it.</p>
<p>In this article, I will present how to do so effectively.</p>
<h2 id="collecting-information">Collecting information<a href="#collecting-information" class="anchor">#</a></h2>
<p>Whenever you find an interesting link, send it to <a href="http://getpocket.com/">Pocket</a>
so you can read it later.</p>
<h3 id="blogs">Blogs<a href="#blogs" class="anchor">#</a></h3>
<p>To find interesting links subscribe to blog RSS feeds using
<a href="https://ifttt.com/">If This Then That</a>: it will send new entries directly to
pocket.</p>
<p>Here are some blogs I personnally follow (caution, they're not really sorted):</p>
<ul><li><a href="http://williamdurand.fr/">William Durand's blog</a></li>
<li><a href="http://www.mountaingoatsoftware.com/blog">Mountain Goat Software</a></li>
<li><a href="http://blog.karolsojko.com/">Karol S&oacute;jko's blog</a></li>
<li><a href="http://blog.8thlight.com/">8th light</a></li>
<li><a href="http://richardmiller.co.uk/">Richard Miller's blog</a></li>
<li><a href="http://verraes.net/#blog">Mathias Verraes's blog</a></li>
<li><a href="http://www.whitewashing.de/">Benjamin Eberlei's blog</a></li>
<li><a href="http://nedroid.com/">Nedroid</a></li>
<li><a href="https://igor.io/">Igor Wiedler's blog</a></li>
</ul><h3 id="twitter">Twitter<a href="#twitter" class="anchor">#</a></h3>
<p>You can also use <a href="https://twitter.com/">Twitter</a>:</p>
<ol><li>create a private list which will serve as a pool</li>
<li>add any author which might post interresting messages</li>
<li>after a week or so, add the author to a public list</li>
</ol><p>The lists only show messages (not retweets) and conversations between people
you follow. They also allow you to create categories.</p>
<p>If you want, you can have a look at
<a href="https://twitter.com/epiloic/lists/">my own public lists</a>.</p>
<h3 id="github">Github<a href="#github" class="anchor">#</a></h3>
<p>Last but not least, <a href="https://github.com/">Github</a> can also be a great source of
discoveries: by following someone which stars or watch a lot of projects you
will have them listed on your homepage.</p>
<p>Here's my advice: <a href="https://github.com/pborreli">Pascal Borreli</a> contributes to
many repositories, you should start to follow him.</p>
<h2 id="reading-it">Reading it<a href="#reading-it" class="anchor">#</a></h2>
<p>Collecting resources is a thing, getting it read is another one. Just like
<a href="http://verraes.net/2012/12/how-to-read-more-books/">Mathias Verraes advised it</a>,
you should get an e-reader: you can send the pages you gathered on Pocket and
then read them everywhere.</p>
<p>Pocket allows you to remove the articles you found not so interresting after
all, it also allows you to archive the good ones and to favorite the great ones.</p>
<p>Speaking of reading and e-readers, books are another good way of discovering new
things. Do not underestimate them. Here's a list of books I'd recommend:</p>
<ul><li><a href="http://git-scm.com/book">Pro Git</a></li>
<li>Clean Code, by Robert C. Martin</li>
<li>Agile Software Development, Principles, Patterns, and Practices, by Robert C. Martin</li>
</ul><h2 id="conclusion">Conclusion<a href="#conclusion" class="anchor">#</a></h2>
<p>The point is: current tools won't last and there's a lot of practices you're
not aware of. If you want to improve yourself and keep up with other developers,
you have to try your best to discover new practices (which might be rather old
actually) and new trending tools.</p>
<p>I hope you found this article enjoyable and helpful.</p>]]></content>
    </entry>
    </feed>
